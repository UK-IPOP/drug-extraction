# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/


# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Environments
.env
.venv

.vscode
src/.DS_Store
.DS_Store
.idea/*
data/*
docs/site/
uploads/

# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb
core/data/records.csv
core/data/sample_opioids.json
extracted.jsonl
extracted_drugs.csv
extracted_drugs.jsonl


# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
web/coverage

# next.js
web/.next/
web/out/

# production
web//build

# misc
.DS_Store
web/*.pem

# debug
web/npm-debug.log*
web/yarn-debug.log*
web/yarn-error.log*
web/.pnpm-debug.log*

# local env files
web/.env*.local

# vercel
web/.vercel

# typescript
*.tsbuildinfo
web/.next
web/node_modules